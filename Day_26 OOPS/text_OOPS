                      OOPS
            OBJCET ORIENTED PROGRAMMINGS
       -----------------------------------------

Class
------------

a class is a Blue print or Template
inside the class we can declare variables and Functions etc.

a class is a User defined
class provides Building of  data and Functionality Together


as per requirement user creates a Datatype  we can call it Class

--> python classes provides the all Standard features of OOPS
--> The class Inheritance mechanism allows the Multiple base Classes.

--> a class is a plan (blue print or template ) of objects


To create class we can use the Keyword CLASS


Object
-------------

object is a instantiate of class,
or object is a simply Collection of data , variables, methods that act on those data.
An object is a single instance of a class
we can create many objects from the same class type.
The Class is being used to create a new Object


      __init__
=====================================

TO Understand the meaning of classes we have to understand the meaning of built_in function
__init__

__init__ is one of the reserved methods in Python.
In object oriented programming, it is known as a constructor.

which is always executed when the class is being instantiated

__init__ function is called automatically every time

__init__ we can call it Special Method


1) What are the Major Components of OOps?
    Class
    Object


2) What is the main Features of OOPs ?

i) inheritance
ii) polymorphism
iii) Encapsulation
iV) Abstraction

3) Benefits of OOPs ?
  Model the Real World , allows Code reusability

Types of variables
---------------------

Class Variables
Instance variables
Static Variables

Class Variables
-------------------
class variables can be defined Outside the Constructer and inside the Class


Instance Variables
----------------------
instance variables are available in inside the instance method


Static Variables
------------------
Static variables are available in inside the static method
Static variables are accessed using class Name.

self Parameter
------------------------
The self parameter is a reference to the current instance of the class, and is used to access variables that belongs to the class.

It does not have to be named self ,
you can call it whatever you like, but it has to be the first parameter of any function in the class.

 self represents the instance of the class. By using the “self” we can access the attributes and methods of the class in python

Instance method
----------------------

instance method can be called at the time of Object Creation

we can create object and get the values , and self is first argument
we cant access the class variables inside the instance method
if we want to access we can give self before the class variable in instance method or
 we can give class name before the class variable in instance method


static method
___________________

we can give @staticmethod before the method definition

we cant create a object we can get values
we can create a object we can get values

there is no self argument

we cant access the class variables inside the Static method
if we want to access we can give class name before the class variable in Static method

Static use always class name
Static variables are methods , that can be accessed using class name


Class method vs Static Method
______________________________________________________________
A class method takes cls as the first parameter while a static method needs no specific parameters.
We use @classmethod decorator in python to create a class method and we use @staticmethod decorator to create a static method in python.